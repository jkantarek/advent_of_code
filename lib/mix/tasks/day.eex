defmodule AdventOfCode.Y<%= year %>.Day<%= day %> do
  @moduledoc """

  """

  @doc """
  Day <%= day %> - Part 1

  ## Examples

    iex> AdventOfCode.Y<%= year %>.Day<%= day %>.part1()
    nil

  """

  def part1() do
    setup()
  end

  def decoder(line) do
    line
  end

  def setup() do
    AdventOfCode.etl_file(
      "lib/y_<%= year %>/d<%= day %>/input.txt",
      &decoder/1,
      &AdventOfCode.split_newline/1,
      %{reject_blanks: true, reject_nils: true}
    )
  end

  @doc """
  Day <%= day %> - Part 2

  ## Examples

    iex> AdventOfCode.Y<%= year %>.Day<%= day %>.part2()
    nil

  """

  def part2() do

  end
end
